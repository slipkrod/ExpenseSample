<?xml version="1.0" encoding="utf-8"?>
<ebw:ExpenseFlowChart mva:VisualBasic.Settings="Assembly references and imported namespaces for internal implementation" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:av="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:ebe="clr-namespace:ExpenseSample.Business.Entities;assembly=ExpenseSample.Business.Entities" xmlns:ebw="clr-namespace:ExpenseSample.Business.Workflows;assembly=ExpenseSample.Business.Workflows" xmlns:ebwa="clr-namespace:ExpenseSample.Business.Workflows.Activities;assembly=ExpenseSample.Business.Workflows.Activities" xmlns:esc="clr-namespace:ExpenseSample.Services.Contracts;assembly=ExpenseSample.Services.Contracts" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:mv="clr-namespace:Microsoft.VisualBasic;assembly=System" xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities" xmlns:p="http://tempuri.org/" xmlns:p1="http://schemas.microsoft.com/netfx/2009/xaml/servicemodel" xmlns:s="clr-namespace:System;assembly=mscorlib" xmlns:s1="clr-namespace:System;assembly=System" xmlns:s2="clr-namespace:System;assembly=System.Xml" xmlns:s3="clr-namespace:System;assembly=System.Core" xmlns:s4="clr-namespace:System;assembly=System.ServiceModel" xmlns:sa="clr-namespace:System.Activities;assembly=System.Activities" xmlns:sad="clr-namespace:System.Activities.Debugger;assembly=System.Activities" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=System" xmlns:scg1="clr-namespace:System.Collections.Generic;assembly=System.ServiceModel" xmlns:scg2="clr-namespace:System.Collections.Generic;assembly=System.Core" xmlns:scg3="clr-namespace:System.Collections.Generic;assembly=mscorlib" xmlns:sd="clr-namespace:System.Data;assembly=System.Data" xmlns:sl="clr-namespace:System.Linq;assembly=System.Core" xmlns:ssa="clr-namespace:System.ServiceModel.Activities;assembly=System.ServiceModel.Activities" xmlns:ssx="clr-namespace:System.ServiceModel.XamlIntegration;assembly=System.ServiceModel" xmlns:st="clr-namespace:System.Text;assembly=mscorlib" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <ebw:ExpenseFlowChart.Implementation>
    <Flowchart sad:XamlDebuggerXmlReader.FileName="D:\Data\Projects\Sample\ExpenseSample V4.0.2\Business\ExpenseSample.Business.Workflows\ExpenseFlowChart.xaml">
      <Flowchart.Variables>
        <Variable x:TypeArguments="p1:CorrelationHandle" Name="handle" />
        <Variable x:TypeArguments="esc:SubmitterRequestMessage" Name="submitterMessage" />
        <Variable x:TypeArguments="esc:ApproverRequestMessage" Name="approverMessage" />
        <Variable x:TypeArguments="x:Boolean" Name="isCompleted" />
      </Flowchart.Variables>
      <Flowchart.StartNode>
        <FlowStep x:Name="__ReferenceID6">
          <Sequence DisplayName="Submitted">
            <p1:Receive x:Name="__ReferenceID0" CanCreateInstance="True" CorrelatesWith="[handle]" DisplayName="Submit Expense Request" OperationName="SubmitExpense" ServiceContractName="p:IExpenseWorkflowService">
              <p1:Receive.CorrelatesOn>
                <p1:XPathMessageQuery x:Key="key1">
                  <p1:XPathMessageQuery.Namespaces>
                    <ssx:XPathMessageContextMarkup>
                      <x:String x:Key="xg0">http://tempuri.org/</x:String>
                    </ssx:XPathMessageContextMarkup>
                  </p1:XPathMessageQuery.Namespaces>sm:header()/xg0:CorrelationID</p1:XPathMessageQuery>
              </p1:Receive.CorrelatesOn>
              <p1:Receive.KnownTypes>
                <x:Type Type="esc:SubmitterRequestMessage" />
              </p1:Receive.KnownTypes>
              <p1:ReceiveMessageContent DeclaredMessageType="esc:SubmitterRequestMessage">
                <OutArgument x:TypeArguments="esc:SubmitterRequestMessage">[submitterMessage]</OutArgument>
              </p1:ReceiveMessageContent>
            </p1:Receive>
            <Assign>
              <Assign.To>
                <OutArgument x:TypeArguments="x:String">[submitterMessage.Expense.AssignedTo]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:String">Manager</InArgument>
              </Assign.Value>
            </Assign>
            <ebwa:SubmitExpense Expense="[submitterMessage.Expense]" />
            <p1:SendReply Request="{x:Reference __ReferenceID0}" DisplayName="Submit Expense Response" PersistBeforeSend="True">
              <p1:SendReply.CorrelationInitializers>
                <p1:QueryCorrelationInitializer CorrelationHandle="[handle]">
                  <p1:XPathMessageQuery x:Key="key1">
                    <p1:XPathMessageQuery.Namespaces>
                      <ssx:XPathMessageContextMarkup>
                        <x:String x:Key="xg0">http://tempuri.org/</x:String>
                      </ssx:XPathMessageContextMarkup>
                    </p1:XPathMessageQuery.Namespaces>sm:header()/xg0:CorrelationID</p1:XPathMessageQuery>
                </p1:QueryCorrelationInitializer>
              </p1:SendReply.CorrelationInitializers>
              <p1:SendMessageContent DeclaredMessageType="esc:SubmitterRequestMessage">
                <InArgument x:TypeArguments="esc:SubmitterRequestMessage">[submitterMessage]</InArgument>
              </p1:SendMessageContent>
            </p1:SendReply>
          </Sequence>
          <FlowStep.Next>
            <FlowStep x:Name="__ReferenceID7">
              <Pick DisplayName="Cancelled, Reviewed or Unattended">
                <PickBranch DisplayName="Expense is Cancelled">
                  <PickBranch.Trigger>
                    <Sequence>
                      <p1:Receive x:Name="__ReferenceID1" CorrelatesWith="[handle]" DisplayName="Cancel Expense Request" OperationName="CancelExpense" ServiceContractName="p:IExpenseWorkflowService">
                        <p1:Receive.CorrelatesOn>
                          <p1:XPathMessageQuery x:Key="key1">
                            <p1:XPathMessageQuery.Namespaces>
                              <ssx:XPathMessageContextMarkup>
                                <x:String x:Key="xg0">http://tempuri.org/</x:String>
                              </ssx:XPathMessageContextMarkup>
                            </p1:XPathMessageQuery.Namespaces>sm:header()/xg0:CorrelationID</p1:XPathMessageQuery>
                        </p1:Receive.CorrelatesOn>
                        <p1:Receive.KnownTypes>
                          <x:Type Type="ebe:Expense" />
                        </p1:Receive.KnownTypes>
                        <p1:ReceiveMessageContent DeclaredMessageType="esc:SubmitterRequestMessage">
                          <OutArgument x:TypeArguments="esc:SubmitterRequestMessage">[submitterMessage]</OutArgument>
                        </p1:ReceiveMessageContent>
                      </p1:Receive>
                      <Assign>
                        <Assign.To>
                          <OutArgument x:TypeArguments="x:String">[submitterMessage.Expense.AssignedTo]</OutArgument>
                        </Assign.To>
                        <Assign.Value>
                          <InArgument x:TypeArguments="x:String">[String.Empty]</InArgument>
                        </Assign.Value>
                      </Assign>
                      <ebwa:CancelExpense Expense="[submitterMessage.Expense]" />
                      <p1:SendReply Request="{x:Reference __ReferenceID1}" DisplayName="Cancel Expense Response" PersistBeforeSend="True">
                        <p1:SendReply.CorrelationInitializers>
                          <p1:QueryCorrelationInitializer CorrelationHandle="[handle]">
                            <p1:XPathMessageQuery x:Key="key1">
                              <p1:XPathMessageQuery.Namespaces>
                                <ssx:XPathMessageContextMarkup>
                                  <x:String x:Key="xg0">http://tempuri.org/</x:String>
                                </ssx:XPathMessageContextMarkup>
                              </p1:XPathMessageQuery.Namespaces>sm:header()/xg0:CorrelationID</p1:XPathMessageQuery>
                          </p1:QueryCorrelationInitializer>
                        </p1:SendReply.CorrelationInitializers>
                        <p1:SendMessageContent DeclaredMessageType="esc:SubmitterRequestMessage">
                          <InArgument x:TypeArguments="esc:SubmitterRequestMessage">[submitterMessage]</InArgument>
                        </p1:SendMessageContent>
                      </p1:SendReply>
                    </Sequence>
                  </PickBranch.Trigger>
                  <Assign>
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:Boolean">[isCompleted]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:Boolean">[submitterMessage.Expense.IsCompleted]</InArgument>
                    </Assign.Value>
                  </Assign>
                </PickBranch>
                <PickBranch DisplayName="Expense is Reviewed">
                  <PickBranch.Trigger>
                    <Sequence>
                      <p1:Receive x:Name="__ReferenceID2" CorrelatesWith="[handle]" DisplayName="Review Expense Request" OperationName="ReviewExpense" ServiceContractName="p:IExpenseWorkflowService">
                        <p1:Receive.CorrelatesOn>
                          <p1:XPathMessageQuery x:Key="key1">
                            <p1:XPathMessageQuery.Namespaces>
                              <ssx:XPathMessageContextMarkup>
                                <x:String x:Key="xg0">http://tempuri.org/</x:String>
                              </ssx:XPathMessageContextMarkup>
                            </p1:XPathMessageQuery.Namespaces>sm:header()/xg0:CorrelationID</p1:XPathMessageQuery>
                        </p1:Receive.CorrelatesOn>
                        <p1:Receive.KnownTypes>
                          <x:Type Type="ebe:Expense" />
                          <x:Type Type="ebe:ExpenseReview" />
                        </p1:Receive.KnownTypes>
                        <p1:ReceiveMessageContent DeclaredMessageType="esc:ApproverRequestMessage">
                          <OutArgument x:TypeArguments="esc:ApproverRequestMessage">[approverMessage]</OutArgument>
                        </p1:ReceiveMessageContent>
                      </p1:Receive>
                      <If Condition="[approverMessage.Expense.Amount &gt; 2000 Or approverMessage.Expense.Category = ExpenseCategory.Medical]" DisplayName="Check for Manager Authority">
                        <If.Then>
                          <Sequence>
                            <If Condition="[approverMessage.Expense.Category = ExpenseCategory.Medical]">
                              <If.Then>
                                <Assign>
                                  <Assign.To>
                                    <OutArgument x:TypeArguments="x:String">[approverMessage.Expense.AssignedTo]</OutArgument>
                                  </Assign.To>
                                  <Assign.Value>
                                    <InArgument x:TypeArguments="x:String">HR Manager</InArgument>
                                  </Assign.Value>
                                </Assign>
                              </If.Then>
                              <If.Else>
                                <Assign>
                                  <Assign.To>
                                    <OutArgument x:TypeArguments="x:String">[approverMessage.Expense.AssignedTo]</OutArgument>
                                  </Assign.To>
                                  <Assign.Value>
                                    <InArgument x:TypeArguments="x:String">Head of Department</InArgument>
                                  </Assign.Value>
                                </Assign>
                              </If.Else>
                            </If>
                            <ebwa:ReviewExpense DisplayName="Review Expense" Expense="[approverMessage.Expense]" ExpenseReview="[approverMessage.Review]" />
                          </Sequence>
                        </If.Then>
                        <If.Else>
                          <Sequence>
                            <Assign>
                              <Assign.To>
                                <OutArgument x:TypeArguments="x:String">[approverMessage.Expense.AssignedTo]</OutArgument>
                              </Assign.To>
                              <Assign.Value>
                                <InArgument x:TypeArguments="x:String">Financial Controller</InArgument>
                              </Assign.Value>
                            </Assign>
                            <ebwa:ApproveExpense DisplayName="Auto Approve Expense" Expense="[approverMessage.Expense]" ExpenseReview="[approverMessage.Review]" />
                          </Sequence>
                        </If.Else>
                      </If>
                      <p1:SendReply Request="{x:Reference __ReferenceID2}" DisplayName="Review Expense Response" PersistBeforeSend="True">
                        <p1:SendReply.CorrelationInitializers>
                          <p1:QueryCorrelationInitializer CorrelationHandle="[handle]">
                            <p1:XPathMessageQuery x:Key="key1">
                              <p1:XPathMessageQuery.Namespaces>
                                <ssx:XPathMessageContextMarkup>
                                  <x:String x:Key="xg0">http://tempuri.org/</x:String>
                                </ssx:XPathMessageContextMarkup>
                              </p1:XPathMessageQuery.Namespaces>sm:header()/xg0:CorrelationID</p1:XPathMessageQuery>
                          </p1:QueryCorrelationInitializer>
                        </p1:SendReply.CorrelationInitializers>
                        <p1:SendMessageContent DeclaredMessageType="esc:ApproverRequestMessage">
                          <InArgument x:TypeArguments="esc:ApproverRequestMessage">[approverMessage]</InArgument>
                        </p1:SendMessageContent>
                      </p1:SendReply>
                    </Sequence>
                  </PickBranch.Trigger>
                  <Assign>
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:Boolean">[isCompleted]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:Boolean">[approverMessage.Expense.IsCompleted]</InArgument>
                    </Assign.Value>
                  </Assign>
                </PickBranch>
                <PickBranch DisplayName="Expense Unattended">
                  <PickBranch.Trigger>
                    <Delay Duration="00:00:30" />
                  </PickBranch.Trigger>
                  <Sequence>
                    <Sequence>
                      <Assign>
                        <Assign.To>
                          <OutArgument x:TypeArguments="x:String">[submitterMessage.Expense.AssignedTo]</OutArgument>
                        </Assign.To>
                        <Assign.Value>
                          <InArgument x:TypeArguments="x:String">Head of Department</InArgument>
                        </Assign.Value>
                      </Assign>
                      <ebwa:EscalateExpense DisplayName="Escalate Expense" Expense="[submitterMessage.Expense]" />
                    </Sequence>
                    <Assign>
                      <Assign.To>
                        <OutArgument x:TypeArguments="x:Boolean">[isCompleted]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="x:Boolean">[submitterMessage.Expense.IsCompleted]</InArgument>
                      </Assign.Value>
                    </Assign>
                    <Persist />
                  </Sequence>
                </PickBranch>
              </Pick>
              <FlowStep.Next>
                <FlowDecision x:Name="__ReferenceID8" Condition="[isCompleted]">
                  <FlowDecision.False>
                    <FlowStep x:Name="__ReferenceID4">
                      <Pick DisplayName="Approved">
                        <PickBranch DisplayName="Expense Approved">
                          <PickBranch.Trigger>
                            <Sequence DisplayName="Expense Approved">
                              <p1:Receive x:Name="__ReferenceID3" CorrelatesWith="[handle]" DisplayName="Approve Expense Request" OperationName="ApproveExpense" ServiceContractName="p:IExpenseWorkflowService">
                                <p1:Receive.CorrelatesOn>
                                  <p1:XPathMessageQuery x:Key="key1">
                                    <p1:XPathMessageQuery.Namespaces>
                                      <ssx:XPathMessageContextMarkup>
                                        <x:String x:Key="xg0">http://tempuri.org/</x:String>
                                      </ssx:XPathMessageContextMarkup>
                                    </p1:XPathMessageQuery.Namespaces>sm:header()/xg0:CorrelationID</p1:XPathMessageQuery>
                                </p1:Receive.CorrelatesOn>
                                <p1:Receive.KnownTypes>
                                  <x:Type Type="ebe:Expense" />
                                  <x:Type Type="ebe:ExpenseReview" />
                                </p1:Receive.KnownTypes>
                                <p1:ReceiveMessageContent DeclaredMessageType="esc:ApproverRequestMessage">
                                  <OutArgument x:TypeArguments="esc:ApproverRequestMessage">[approverMessage]</OutArgument>
                                </p1:ReceiveMessageContent>
                              </p1:Receive>
                              <If Condition="[approverMessage.Expense.Status = ExpenseStatus.Escalated And approverMessage.Expense.Category = ExpenseCategory.Medical]" DisplayName="Check for Head of Department Authority">
                                <If.Then>
                                  <Sequence>
                                    <Assign>
                                      <Assign.To>
                                        <OutArgument x:TypeArguments="x:String">[approverMessage.Expense.AssignedTo]</OutArgument>
                                      </Assign.To>
                                      <Assign.Value>
                                        <InArgument x:TypeArguments="x:String">HR Manager</InArgument>
                                      </Assign.Value>
                                    </Assign>
                                    <ebwa:ReviewExpense DisplayName="Review Expense" Expense="[approverMessage.Expense]" ExpenseReview="[approverMessage.Review]" />
                                  </Sequence>
                                </If.Then>
                                <If.Else>
                                  <Sequence>
                                    <Assign>
                                      <Assign.To>
                                        <OutArgument x:TypeArguments="x:String">[approverMessage.Expense.AssignedTo]</OutArgument>
                                      </Assign.To>
                                      <Assign.Value>
                                        <InArgument x:TypeArguments="x:String">Financial Controller</InArgument>
                                      </Assign.Value>
                                    </Assign>
                                    <ebwa:ApproveExpense DisplayName="Approve Expense" Expense="[approverMessage.Expense]" ExpenseReview="[approverMessage.Review]" />
                                  </Sequence>
                                </If.Else>
                              </If>
                              <p1:SendReply Request="{x:Reference __ReferenceID3}" DisplayName="Approve Expense Response" PersistBeforeSend="True">
                                <p1:SendReply.CorrelationInitializers>
                                  <p1:QueryCorrelationInitializer CorrelationHandle="[handle]">
                                    <p1:XPathMessageQuery x:Key="key1">
                                      <p1:XPathMessageQuery.Namespaces>
                                        <ssx:XPathMessageContextMarkup>
                                          <x:String x:Key="xg0">http://tempuri.org/</x:String>
                                        </ssx:XPathMessageContextMarkup>
                                      </p1:XPathMessageQuery.Namespaces>sm:header()/xg0:CorrelationID</p1:XPathMessageQuery>
                                  </p1:QueryCorrelationInitializer>
                                </p1:SendReply.CorrelationInitializers>
                                <p1:SendMessageContent DeclaredMessageType="esc:ApproverRequestMessage">
                                  <InArgument x:TypeArguments="esc:ApproverRequestMessage">[approverMessage]</InArgument>
                                </p1:SendMessageContent>
                              </p1:SendReply>
                            </Sequence>
                          </PickBranch.Trigger>
                        </PickBranch>
                        <PickBranch DisplayName="Expense Unattended">
                          <PickBranch.Trigger>
                            <Delay Duration="00:00:30" />
                          </PickBranch.Trigger>
                          <Sequence>
                            <Assign>
                              <Assign.To>
                                <OutArgument x:TypeArguments="x:String">[submitterMessage.Expense.AssignedTo]</OutArgument>
                              </Assign.To>
                              <Assign.Value>
                                <InArgument x:TypeArguments="x:String">[String.Empty]</InArgument>
                              </Assign.Value>
                            </Assign>
                            <ebwa:ExpireExpense DisplayName="Expire Expense" Expense="[submitterMessage.Expense]" />
                            <Assign>
                              <Assign.To>
                                <OutArgument x:TypeArguments="x:Boolean">[isCompleted]</OutArgument>
                              </Assign.To>
                              <Assign.Value>
                                <InArgument x:TypeArguments="x:Boolean">[submitterMessage.Expense.IsCompleted]</InArgument>
                              </Assign.Value>
                            </Assign>
                            <Persist />
                          </Sequence>
                        </PickBranch>
                      </Pick>
                      <FlowStep.Next>
                        <FlowDecision x:Name="__ReferenceID11" Condition="[isCompleted]">
                          <FlowDecision.False>
                            <FlowDecision x:Name="__ReferenceID10" Condition="[approverMessage.Expense.Category = ExpenseCategory.Medical And approverMessage.Expense.Status = ExpenseStatus.Reviewed]" True="{x:Reference __ReferenceID4}">
                              <FlowDecision.False>
                                <FlowStep x:Name="__ReferenceID9">
                                  <Sequence DisplayName="Expense Disbursed">
                                    <p1:Receive x:Name="__ReferenceID5" CorrelatesWith="[handle]" DisplayName="Disburse Expense Request" OperationName="DisburseExpense" ServiceContractName="p:IExpenseWorkflowService">
                                      <p1:Receive.CorrelatesOn>
                                        <p1:XPathMessageQuery x:Key="key1">
                                          <p1:XPathMessageQuery.Namespaces>
                                            <ssx:XPathMessageContextMarkup>
                                              <x:String x:Key="xg0">http://tempuri.org/</x:String>
                                            </ssx:XPathMessageContextMarkup>
                                          </p1:XPathMessageQuery.Namespaces>sm:header()/xg0:CorrelationID</p1:XPathMessageQuery>
                                      </p1:Receive.CorrelatesOn>
                                      <p1:Receive.KnownTypes>
                                        <x:Type Type="esc:ApproverRequestMessage" />
                                      </p1:Receive.KnownTypes>
                                      <p1:ReceiveMessageContent DeclaredMessageType="esc:ApproverRequestMessage">
                                        <OutArgument x:TypeArguments="esc:ApproverRequestMessage">[approverMessage]</OutArgument>
                                      </p1:ReceiveMessageContent>
                                    </p1:Receive>
                                    <Assign>
                                      <Assign.To>
                                        <OutArgument x:TypeArguments="x:String">[approverMessage.Expense.AssignedTo]</OutArgument>
                                      </Assign.To>
                                      <Assign.Value>
                                        <InArgument x:TypeArguments="x:String">[String.Empty]</InArgument>
                                      </Assign.Value>
                                    </Assign>
                                    <ebwa:DisburseExpense DisplayName="Disburse Expense" Expense="[approverMessage.Expense]" ExpenseReview="[approverMessage.Review]" />
                                    <p1:SendReply Request="{x:Reference __ReferenceID5}" DisplayName="Disburse Expense Response" PersistBeforeSend="True">
                                      <p1:SendReply.CorrelationInitializers>
                                        <p1:QueryCorrelationInitializer CorrelationHandle="[handle]">
                                          <p1:XPathMessageQuery x:Key="key1">
                                            <p1:XPathMessageQuery.Namespaces>
                                              <ssx:XPathMessageContextMarkup>
                                                <x:String x:Key="xg0">http://tempuri.org/</x:String>
                                              </ssx:XPathMessageContextMarkup>
                                            </p1:XPathMessageQuery.Namespaces>sm:header()/xg0:CorrelationID</p1:XPathMessageQuery>
                                        </p1:QueryCorrelationInitializer>
                                      </p1:SendReply.CorrelationInitializers>
                                      <p1:SendMessageContent DeclaredMessageType="esc:ApproverRequestMessage">
                                        <InArgument x:TypeArguments="esc:ApproverRequestMessage">[approverMessage]</InArgument>
                                      </p1:SendMessageContent>
                                    </p1:SendReply>
                                  </Sequence>
                                </FlowStep>
                              </FlowDecision.False>
                            </FlowDecision>
                          </FlowDecision.False>
                        </FlowDecision>
                      </FlowStep.Next>
                    </FlowStep>
                  </FlowDecision.False>
                </FlowDecision>
              </FlowStep.Next>
            </FlowStep>
          </FlowStep.Next>
        </FlowStep>
      </Flowchart.StartNode>
      <x:Reference>__ReferenceID6</x:Reference>
      <x:Reference>__ReferenceID7</x:Reference>
      <x:Reference>__ReferenceID8</x:Reference>
      <x:Reference>__ReferenceID9</x:Reference>
      <x:Reference>__ReferenceID4</x:Reference>
      <x:Reference>__ReferenceID10</x:Reference>
      <x:Reference>__ReferenceID11</x:Reference>
    </Flowchart>
  </ebw:ExpenseFlowChart.Implementation>
</ebw:ExpenseFlowChart>