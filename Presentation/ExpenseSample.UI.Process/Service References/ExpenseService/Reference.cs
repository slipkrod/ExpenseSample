//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ExpenseSample.UI.Process.ExpenseService {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://serena-yeoh//LayerSample/Expense/2007/08", ConfigurationName="ExpenseService.IExpenseService")]
    public interface IExpenseService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://serena-yeoh//LayerSample/Expense/2007/08/IExpenseService/Purge", ReplyAction="http://serena-yeoh//LayerSample/Expense/2007/08/IExpenseService/PurgeResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(ExpenseSample.Services.Contracts.ProcessExecutionFault), Action="http://serena-yeoh//LayerSample/Expense/2007/08/IExpenseService/PurgeProcessExecu" +
            "tionFaultFault", Name="ProcessExecutionFault", Namespace="http://schemas.datacontract.org/2004/07/ExpenseSample.Services.Contracts")]
        void Purge();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://serena-yeoh//LayerSample/Expense/2007/08/IExpenseService/ListActiveExpense" +
            "s", ReplyAction="http://serena-yeoh//LayerSample/Expense/2007/08/IExpenseService/ListActiveExpense" +
            "sResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(ExpenseSample.Services.Contracts.ProcessExecutionFault), Action="http://serena-yeoh//LayerSample/Expense/2007/08/IExpenseService/ListActiveExpense" +
            "sProcessExecutionFaultFault", Name="ProcessExecutionFault", Namespace="http://schemas.datacontract.org/2004/07/ExpenseSample.Services.Contracts")]
        System.Collections.Generic.List<ExpenseSample.Business.Entities.Expense> ListActiveExpenses();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://serena-yeoh//LayerSample/Expense/2007/08/IExpenseService/ListExpensesForEm" +
            "ployee", ReplyAction="http://serena-yeoh//LayerSample/Expense/2007/08/IExpenseService/ListExpensesForEm" +
            "ployeeResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(ExpenseSample.Services.Contracts.ProcessExecutionFault), Action="http://serena-yeoh//LayerSample/Expense/2007/08/IExpenseService/ListExpensesForEm" +
            "ployeeProcessExecutionFaultFault", Name="ProcessExecutionFault", Namespace="http://schemas.datacontract.org/2004/07/ExpenseSample.Services.Contracts")]
        System.Collections.Generic.List<ExpenseSample.Business.Entities.Expense> ListExpensesForEmployee(string employeeID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://serena-yeoh//LayerSample/Expense/2007/08/IExpenseService/ListExpensesForAp" +
            "proval", ReplyAction="http://serena-yeoh//LayerSample/Expense/2007/08/IExpenseService/ListExpensesForAp" +
            "provalResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(ExpenseSample.Services.Contracts.ProcessExecutionFault), Action="http://serena-yeoh//LayerSample/Expense/2007/08/IExpenseService/ListExpensesForAp" +
            "provalProcessExecutionFaultFault", Name="ProcessExecutionFault", Namespace="http://schemas.datacontract.org/2004/07/ExpenseSample.Services.Contracts")]
        System.Collections.Generic.List<ExpenseSample.Business.Entities.Expense> ListExpensesForApproval(string reviewerID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://serena-yeoh//LayerSample/Expense/2007/08/IExpenseService/ListExpenseReview" +
            "s", ReplyAction="http://serena-yeoh//LayerSample/Expense/2007/08/IExpenseService/ListExpenseReview" +
            "sResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(ExpenseSample.Services.Contracts.ProcessExecutionFault), Action="http://serena-yeoh//LayerSample/Expense/2007/08/IExpenseService/ListExpenseReview" +
            "sProcessExecutionFaultFault", Name="ProcessExecutionFault", Namespace="http://schemas.datacontract.org/2004/07/ExpenseSample.Services.Contracts")]
        System.Collections.Generic.List<ExpenseSample.Business.Entities.ExpenseReview> ListExpenseReviews(long expenseID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://serena-yeoh//LayerSample/Expense/2007/08/IExpenseService/ListExpenseLogs", ReplyAction="http://serena-yeoh//LayerSample/Expense/2007/08/IExpenseService/ListExpenseLogsRe" +
            "sponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(ExpenseSample.Services.Contracts.ProcessExecutionFault), Action="http://serena-yeoh//LayerSample/Expense/2007/08/IExpenseService/ListExpenseLogsPr" +
            "ocessExecutionFaultFault", Name="ProcessExecutionFault", Namespace="http://schemas.datacontract.org/2004/07/ExpenseSample.Services.Contracts")]
        System.Collections.Generic.List<ExpenseSample.Business.Entities.ExpenseLog> ListExpenseLogs(long expenseID);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IExpenseServiceChannel : ExpenseSample.UI.Process.ExpenseService.IExpenseService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ExpenseServiceClient : System.ServiceModel.ClientBase<ExpenseSample.UI.Process.ExpenseService.IExpenseService>, ExpenseSample.UI.Process.ExpenseService.IExpenseService {
        
        public ExpenseServiceClient() {
        }
        
        public ExpenseServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ExpenseServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ExpenseServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ExpenseServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public void Purge() {
            base.Channel.Purge();
        }
        
        public System.Collections.Generic.List<ExpenseSample.Business.Entities.Expense> ListActiveExpenses() {
            return base.Channel.ListActiveExpenses();
        }
        
        public System.Collections.Generic.List<ExpenseSample.Business.Entities.Expense> ListExpensesForEmployee(string employeeID) {
            return base.Channel.ListExpensesForEmployee(employeeID);
        }
        
        public System.Collections.Generic.List<ExpenseSample.Business.Entities.Expense> ListExpensesForApproval(string reviewerID) {
            return base.Channel.ListExpensesForApproval(reviewerID);
        }
        
        public System.Collections.Generic.List<ExpenseSample.Business.Entities.ExpenseReview> ListExpenseReviews(long expenseID) {
            return base.Channel.ListExpenseReviews(expenseID);
        }
        
        public System.Collections.Generic.List<ExpenseSample.Business.Entities.ExpenseLog> ListExpenseLogs(long expenseID) {
            return base.Channel.ListExpenseLogs(expenseID);
        }
    }
}
